import{_ as s,o as a,c as o,e}from"./app.61d52ebc.js";const n={},d=e(`<p data-s="27433">npm run build<br> npm run doc<br> npm i<br> git clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli<br> mkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json<br> cd ../../; npm i --production; cd ../../<br> node ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js<br> node ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package<br> cp lodash.js npm-package/lodash.js<br> cp dist/lodash.min.js npm-package/lodash.min.js<br> cp LICENSE npm-package/LICENSE</p><ol data-s="27434"><li><p data-s="27435">Clone two repos<br> Bump lodash version in package.json, readme, package=locak, lodash.js<br> npm run build<br> npm run doc</p></li><li><p data-s="27436">update mappings in ldoash-cli</p></li><li><p data-s="27437">copy ldoash into lodash-cli node modules and package json.</p></li></ol><p data-s="27438">node ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js<br> node ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package</p><ol data-s="27439"><li>Clone the two repositories:</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> clone https://github.com/lodash/lodash.git
$ <span class="token function">git</span> clone https://github.com/bnjmnt4n/lodash-cli.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2" data-s="27440"><li>Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.</li><li>In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json</li><li>Run:</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run build
<span class="token function">npm</span> run doc
<span class="token function">node</span> <span class="token punctuation">..</span>/lodash-cli/bin/lodash core <span class="token parameter variable">-o</span> ./dist/lodash.core.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5" data-s="27441"><li>Add a commit and tag the release<br> mkdir ../lodash-temp<br> cp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/<br> node ../lodash-cli/bin/lodash modularize exports=node -o .<br> cp ../lodash-temp/lodash.core.js core.js<br> cp ../lodash-temp/lodash.core.min.js core.min.js<br> cp ../lodash-temp/lodash.js lodash.js<br> cp ../lodash-temp/lodash.min.js lodash.min.js</li></ol><p data-s="27442">\u276F node ../lodash-cli/bin/lodash modularize exports=es -o .</p>`,9),l=[d];function i(c,t){return a(),o("div",null,l)}const r=s(n,[["render",i],["__file","release.html.vue"]]);export{r as default};
